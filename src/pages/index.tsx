import Head from 'next/head'
import Image from 'next/image'
import router from 'next/router'
import styles from '../styles/Home.module.css'
import { GetServerSideProps } from 'next'
import { HStack, Wrap, Button, Text, useColorMode } from '@chakra-ui/react'
import { useLogin } from '../provider/AuthProvider'

export default function Home() {
  const { colorMode, toggleColorMode } = useColorMode()
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <HStack>
          <Button
            bgColor='green.700'
            color='white'
            p='6'
            onClick={() => {
              router.push('/login')
            }}
          >
            login　→
          </Button>
          <Button
            bgColor='purple.700'
            color='white'
            p='6'
            onClick={() => {
              router.push('/login_nativebase')
            }}
          >
            login(NativeBase)　→
          </Button>

          <Button bgColor='messenger.900' color='white' p='6' onClick={() => router.push('/glitch')}>
            glitch →
          </Button>
          <Button
            bgColor='twitter.400'
            color='white'
            p='6'
            onClick={() => {
              toggleColorMode()
            }}
          >
            change theme
          </Button>
        </HStack>
        <HStack>
          <Button
            bgColor='orange.400'
            color='white'
            p='6'
            onClick={() => {
              router.push('/practice_collapse')
            }}
          >
            practice_collapse →
          </Button>
          <Button
            bgColor='teal.400'
            color='white'
            p='6'
            onClick={() => {
              router.push('/practice_notion')
            }}
          >
            practice_notion →
          </Button>
        </HStack>
        <Wrap>
          <Text>{process.env.customKey}</Text>
        </Wrap>

        <h1 className={styles.title}>
          Welcome to <a href='https://nextjs.org'>Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href='https://nextjs.org/docs' className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href='https://nextjs.org/learn' className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a href='https://github.com/vercel/next.js/tree/master/examples' className={styles.card}>
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href='https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>Instantly deploy your Next.js site to a public URL with Vercel.</p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            {/* <Image src='./vercel.svg' alt='Vercel Logo' width={72} height={16} /> */}
          </span>
        </a>
      </footer>
    </div>
  )
}

// export const getServerSideProps: GetServerSideProps = async () => {
//   // return {
//   //   redirect: {
//   //     permanent: false,
//   //     destination: '/login',
//   //   },
//   // }
//   return {
//     props: {},
//   }
// }
